# 3.3[20]: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем 
# слова. Будем считать, что на вход подается только одно слово, которое 
# содержит либо только английские, либо только русские буквы и заранее известно 
# какой алфавит надо использовать.

# Примеры/Тесты:
# Input:   ноутбук
# Output:  12

# Input:   notebook
# Output:  14
# (*) Примечание.
# Подумайте о том какие структуры данных здесь наиболее удобно использовать, 
# чтобы просто проверять в какую группу попадает буква, а также просто 
# накапливать сумму очков.
 
dict_en = {1: 'AEIOULNSTR', 2: 'DG', 3: 'BCMP', 4: 'FHVWY', 5: 'K', 8: 'JX', 10: 'QZ'}
dict_ru = {1:'АВЕИНОРСТ', 2: 'ДКЛМПУ', 3: 'БГЁЬЯ', 4: 'ЙЫ', 5: 'ЖЗХЦЧ', 8: 'ШЭЮ', 10: 'ФЩЪ' }
str_1 = 'notebook'
print(f'Введенное слово: {str_1}')
sum_en = 0
for i in range(len(str_1)):
    for key, val in dict_en.items():
        if str_1[i].upper() in val:
            sum_en += key
print(f'Стоимость введенного слова: {sum_en}')
print()

str_2 = 'Ноутбук'
print(f'Введенное слово: {str_2}')
sum_ru = 0
for i in range(len(str_2)):
    for key, val in dict_ru.items():
        if str_2[i].upper() in val:
            sum_ru += key
print(f'Стоимость введенного слова: {sum_ru}')
